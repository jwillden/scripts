#!/bin/bash

# This script synchronizes a dynamic dns value for https://freedns.afraid.org/
# It requires a configured hostname and a Direct URL value stored in the same
# directory named .url e.g. https://freedns.afraid.org/dynamic/update.php?[your token goes here]

# Get the directory of the script and use it as the absolute path for everything
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"

# The current public IP address per ifconfig.io
ACTUAL_IP=$(curl -sSL --ipv4 ifconfig.io/ip)

# This contains the last public ip. Used to determine needed changes
IP_FILE="$DIR/.ip"

# The Direct URL generated by freedns.afraid.org
HOST_FILE="$DIR/.hostname"

# The credentials file. Stored in username:password format
CREDS_FILE="$DIR/.credentials"

# The last time the script was run
LAST_RUN="$DIR/.lastrun"

# The last time freedns.afraid.org was called to update
LAST_UPDATE="$DIR/.lastupdate"

# If there is no .hostname file, exit as there's nothing to do
if [ ! -f "$HOST_FILE" ]
then
	echo "No .hostname file configured. Exiting"
	exit 1
fi

# If there is no .credentails file, exit as the script can't authenticate
if [ ! -f "$CREDS_FILE" ]
then
	echo "No .credentials file configured. Exiting"
	exit 1
fi

# If no IP_FILE, generate one with noise
if [ ! -f "$IP_FILE" ]
then echo "NEW IP" > $IP_FILE
fi

# Get the previous IP value
PREVIOUS_IP=$(cat $IP_FILE)

# If the ACTUAL and PREVIOUS values are different, update the IP

if [ "$ACTUAL_IP" != "$PREVIOUS_IP" ]
then

	# Get the update URL
	UPDATE_HOSTNAME=$(cat $DIR/.hostname)

	# Get the credentials
	UPDATE_CREDENTIALS=$(cat $DIR/.credentials)
	
	# Issue curl command
	curl -sSL -u $UPDATE_CREDENTIALS "https://api.dynu.com/nic/update?hostname=$UPDATE_HOSTNAME$myip=$ACTUAL_IP"

	#Write the current date/time to mark the last time the IP was updated
	echo $(date) > $DIR/.lastupdate

	# Store the current IP address
	echo $ACTUAL_IP > $IP_FILE
fi

# Write the current time to .lastrun
echo $(date)  > $DIR/.lastrun
